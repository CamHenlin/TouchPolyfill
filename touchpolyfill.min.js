(function () { function y(e) { var t = []; if (e) { t.unshift(e); while (e.parentNode) { t.unshift(e.parentNode); e = e.parentNode } } return t } function b(e, t) { var n = y(e); var r = y(t); var i = null; while (n.length > 0 && n[0] == r.shift()) i = n.shift(); return i } function w(e, t, n) { var r = b(e, t); var i = e; var s = []; while (i && i != r) { if (v(i, "touchenter")) s.push(i); i = i.parentNode } while (s.length > 0) n(s.pop()) } function E(e, t, n) { var r = b(e, t); var i = e; while (i && i != r) { if (v(i, "touchleave")) n(i); i = i.parentNode } } function S(e, t) { ["touchstart", "touchmove", "touchend", "touchmove", "touchleave"].forEach(function (n) { window.addEventListener(e(n), function (e) { if (!touching && m(e.target, n)) t(e, n, true) }) }); if (window["on" + e("touchenter").toLowerCase()] === undefined) window.addEventListener(e("touchmove"), function (e) { if (touching) return; var n = m(e.target, "touchenter"); if (!n || n === window) return; else if (!n.contains(e.relatedTarget)) { w(n, e.relatedTarget, function (n) { t(e, "touchenter", false, n, e.relatedTarget) }) } }); if (window["on" + e("touchleave").toLowerCase()] === undefined) window.addEventListener(e("touchleave"), function (e) { if (touching) return; var n = m(e.target, "touchleave"); if (!n || n === window) return; else if (!n.contains(e.relatedTarget)) { E(n, e.relatedTarget, function (n) { t(e, "touchleave", false, n, e.relatedTarget) }) } }) } if (typeof window.ontouchstart === "object") { return } var e = navigator.userAgent; if (e.match(/iPad/i) || e.match(/iPhone/i) || e.match(/iPod/i) || e.match(/Android/i) || e.match(/MSIE/i) && !e.match(/Touch/i)) { return } (function () { var e = "html { -ms-touch-action: none; }", t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style"); n.type = "text/css"; if (n.styleSheet) { n.styleSheet.cssText = e } else { n.appendChild(document.createTextNode(e)) } t.appendChild(n) })(); var t = ["touchstart", "touchmove", "touchend", "touchcancel", "touchleave"]; var n = ["TouchStart", "TouchMove", "TouchEnd", "TouchCancel", "TouchLeave"]; var r; r = function (e, t) { var n; t = t || { bubbles: false, cancelable: false, detail: undefined }; n = document.createEvent("CustomEvent"); n.initCustomEvent(e, t.bubbles, t.cancelable, t.detail); return n }; r.prototype = window.Event.prototype; window.CustomEvent = r; var i = {}; var s = function (e) { while (e && !e.handJobjs_forcePreventDefault) { e = e.parentNode } return !!e || window.handJobjs_forcePreventDefault }; var o = function (e, t, n, r, i, s) { u(t, e, i, n, s) }; var u = function (e, t, n, i, s) { var o = function (e) { e.touches = []; e.touches.length = 1; e.touches[0] = e; e.touches[0].identifier = e.pointerId; var t = ""; if (e.type === "pointerdown") { t = "touchstart" } else if (e.type === "pointermove") { t = "touchmove" } e.type = t; var n = new r(t, { bubbles: true, cancelable: true }); n.touches = e.touches; n.type = t; return n }; var u = function (e) { e.changedTouches = []; e.changedTouches.length = 1; e.changedTouches[0] = e; e.changedTouches[0].identifier = e.pointerId; if (e.type === "pointerup") { eventType = "touchend" } else if (e.type === "pointercancel") { eventType = "touchcancel" } else if (e.type === "pointerleave") { eventType = "touchleave" } e.type = eventType; var t = new r(eventType, { bubbles: true, cancelable: true }); t.touches = e.changedTouches; t.changedTouches = e.changedTouches; t.type = eventType; return t }; var a; if (e.type === "pointerdown" || e.type === "pointermove") { a = o(e) } else { a = u(e) } a.preventDefault = function () { if (e.preventDefault !== undefined) e.preventDefault() }; e.target.dispatchEvent(a) }; var a = function (e) { var n = e.prototype ? e.prototype.addEventListener : e.addEventListener; var r = function (e, r, i) { if (t.indexOf(e) !== -1) { d(this, e, true) } n.call(this, e, r, i) }; if (e.prototype) { e.prototype.addEventListener = r } else { e.addEventListener = r } }; a(window); a(window.HTMLElement || window.Element); a(document); a(HTMLBodyElement); a(HTMLDivElement); a(HTMLImageElement); a(HTMLUListElement); a(HTMLAnchorElement); a(HTMLLIElement); a(HTMLTableElement); if (window.HTMLSpanElement) { a(HTMLSpanElement) } if (window.HTMLCanvasElement) { a(HTMLCanvasElement) } if (window.SVGElement) { a(SVGElement) } var f = function (e, t) { if (e.preventManipulation) { e.preventManipulation() } u(touchPoint, t) }; var l = function (e) { var n = e.prototype ? e.prototype.removeEventListener : e.removeEventListener; var r = function (e, r, i) { if (t.indexOf(e) !== -1) { c(this, e) } n.call(this, e, r, i) }; if (e.prototype) { e.prototype.removeEventListener = r } else { e.removeEventListener = r } }; l(window); l(window.HTMLElement || window.Element); l(document); l(HTMLBodyElement); l(HTMLDivElement); l(HTMLImageElement); l(HTMLUListElement); l(HTMLAnchorElement); l(HTMLLIElement); l(HTMLTableElement); if (window.HTMLSpanElement) { l(HTMLSpanElement) } if (window.HTMLCanvasElement) { l(HTMLCanvasElement) } if (window.SVGElement) { l(SVGElement) } var c = function (e, t) { if (e.ontouchdown !== undefined) { return } if (e.ontouchstart !== undefined) { switch (t.toLowerCase()) { case "touchstart": e.removeEventListener("pointerdown", function (e) { f(e, t) }); break; case "touchmove": e.removeEventListener("pointermove", function (e) { f(e, t) }); break; case "touchend": e.removeEventListener("pointerup", function (e) { f(e, t) }); break; case "touchcancel": e.removeEventListener("pointercancel", function (e) { f(e, t) }); break } } }; var h = function (e, t, n, r) { if (e.__handJobjsRegisteredEvents === undefined) { e.__handJobjsRegisteredEvents = [] } if (r) { if (e.__handJobjsRegisteredEvents[t] !== undefined) { e.__handJobjsRegisteredEvents[t]++; return } e.__handJobjsRegisteredEvents[t] = 1; e.addEventListener(t, n, false) } else { if (e.__handJobjsRegisteredEvents.indexOf(t) !== -1) { e.__handJobjsRegisteredEvents[t]--; if (e.__handJobjsRegisteredEvents[t] !== 0) { return } } e.removeEventListener(t, n); e.__handJobjsRegisteredEvents[t] = 0 } }; var p = function (e, r) { var i = t.indexOf(r); var s = e + n[i]; return s }; var d = function (e, t, n) { if (!e.__handJobjsGlobalRegisteredEvents) { e.__handJobjsGlobalRegisteredEvents = [] } if (n) { if (e.__handJobjsGlobalRegisteredEvents[t] !== undefined) { e.__handJobjsGlobalRegisteredEvents[t]++; return } e.__handJobjsGlobalRegisteredEvents[t] = 1 } else { if (e.__handJobjsGlobalRegisteredEvents[t] !== undefined) { e.__handJobjsGlobalRegisteredEvents[t]--; if (e.__handJobjsGlobalRegisteredEvents[t] < 0) { e.__handJobjsGlobalRegisteredEvents[t] = 0 } } } var r = function (e) { return e }; var i = u; var s = r(t); if (e["on" + s.toLowerCase()] !== undefined) { h(e, s, function (e) { i(e, t) }, n) } }; var v = function (e, t) { return e.__handJobjsGlobalRegisteredEvents && e.__handJobjsGlobalRegisteredEvents[t] }; var m = function (e, t) { while (e && !v(e, t)) e = e.parentNode; if (e) return e; else if (v(window, t)) return window }; var g = function (e, t, n, r, i, s) { if (m(n, e)) { o(e, t, n, r, i, s) } }; (function () { if (typeof window.ontouchstart === "object") { return } if (typeof window.ontouchstart === "undefined") { window.addEventListener("pointerdown", function (e) { var t = e; if (e.pointerType === "mouse") return; i[t.identifier] = t.target; g("touchenter", t, t.target, e, true); w(t.target, null, function (n) { o("touchenter", t, n, e, false) }); g("touchstart", t, t.target, e, true) }); window.addEventListener("pointerup", function (e) { var t = e; var n = i[t.identifier]; if (e.pointerType === "mouse") return; g("touchend", t, n, e, true); g("touchleave", t, n, e, true); E(n, null, function (n) { o("touchleave", t, n, e, false) }) }); window.addEventListener("pointermove", function (e) { var t = e; var n = i[t.identifier]; if (e.pointerType === "mouse") return; if (n && s(n) === true) e.preventDefault(); g("touchmove", t, n, e, true) }) } })() })()